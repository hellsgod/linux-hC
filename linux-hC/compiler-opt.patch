From 65fd2e796034f096672fa75b3076cc782909151a Mon Sep 17 00:00:00 2001
From: hellsgod <hellsgod@gmx.ch>
Date: Thu, 1 May 2025 17:30:41 +0200
Subject: [PATCH] Makefile: Rework my Optimizations

---
 Makefile     | 229 +++++++++++++++++++++++++++++++++++++++++++++++++--
 init/Kconfig |   4 +-
 2 files changed, 225 insertions(+), 8 deletions(-)

diff --git a/Makefile b/Makefile
index 907a4565f06a..b74dea549b1c 100644
--- a/Makefile
+++ b/Makefile
@@ -462,9 +462,156 @@ HOSTRUSTC = rustc
 HOSTPKG_CONFIG	= pkg-config
 
 KBUILD_USERHOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes \
-			 -O2 -fomit-frame-pointer -std=gnu11
+			 -O3 -fomit-frame-pointer -std=gnu11
 KBUILD_USERCFLAGS  := $(KBUILD_USERHOSTCFLAGS) $(USERCFLAGS)
-KBUILD_USERLDFLAGS := $(USERLDFLAGS)
+KBUILD_USERLDFLAGS := \
+  -lto-CGO3 -lto-O3 -Wl,-O3 \
+  -Wl,--gc-sections -Wl,--no-undefined -Wl,--as-needed \
+  -Wl,-z,now -Wl,--relro -Wl,--relax \
+  -Wl,--icf=safe -Wl,--emit-relocs \
+  -Wl,--compress-debug-sections=zstd \
+  -Wl,--exclude-libs,ALL -Wl,--strip-debug \
+  -plugin-opt=hoist-common-insts \
+  -plugin-opt=interleave-loops \
+  -plugin-opt=enable-load-in-loop-pre \
+  -plugin-opt=enable-loop-simplifycfg-term-folding \
+  -plugin-opt=addr-sink-combine-base-gv \
+  -plugin-opt=addr-sink-combine-base-offs \
+  -plugin-opt=addr-sink-combine-base-reg \
+  -plugin-opt=addr-sink-combine-scaled-reg \
+  -plugin-opt=addr-sink-new-phis \
+  -plugin-opt=addr-sink-new-select \
+  -plugin-opt=addr-sink-using-gep \
+  -plugin-opt=select-opti-loop-cycle-gain-threshold=5 \
+  -plugin-opt=select-opti-loop-gradient-gain-threshold=2 \
+  -plugin-opt=select-opti-loop-relative-gain-threshold=2 \
+  -plugin-opt=enable-split-backedge-in-load-pre \
+  -plugin-opt=enable-memcpy-dag-opt \
+  -plugin-opt=do-counter-promotion \
+  -plugin-opt=hoist-runtime-checks \
+  -plugin-opt=enable-gvn-sink \
+  -plugin-opt=enable-newgvn \
+  -plugin-opt=gvn-add-phi-translation \
+  -plugin-opt=enable-spill-copy-elim \
+  -plugin-opt=instcombine-code-sinking \
+  -plugin-opt=sink-insts-to-avoid-spills \
+  -plugin-opt=sink-freq-percent-threshold=50 \
+  -plugin-opt=enable-interleaved-mem-accesses \
+  -plugin-opt=enable-masked-interleaved-mem-accesses \
+  -plugin-opt=enable-epilogue-vectorization \
+  -plugin-opt=enable-early-exit-vectorization \
+  -plugin-opt=enable-dse-initializes-attr-improvement \
+  -plugin-opt=enable-dse-partial-store-merging \
+  -plugin-opt=adce-remove-loops \
+  -plugin-opt=licm-control-flow-hoisting \
+  -plugin-opt=early-live-intervals \
+  -plugin-opt=max-phi-entries-increase-after-removing-empty-block=12 \
+  -plugin-opt=enable-post-misched \
+  -plugin-opt=misched-cluster \
+  -plugin-opt=misched-cyclicpath \
+  -plugin-opt=misched-dcpl \
+  -plugin-opt=misched-fusion \
+  -plugin-opt=misched-regpressure \
+  -plugin-opt=sched-avg-ipc=6 \
+  -plugin-opt=sched-high-latency-cycles=10 \
+  -plugin-opt=sched-model-force-enable-intervals \
+  -plugin-opt=scheditins=1 \
+  -plugin-opt=schedmodel=1 \
+  -plugin-opt=max-sched-reorder=48 \
+  -plugin-opt=thinlto-assume-merged \
+  -plugin-opt=codegen-data-thinlto-two-rounds \
+  -plugin-opt=enable-global-analyses \
+  -plugin-opt=enable-vfe \
+  -plugin-opt=icp-lto \
+  -plugin-opt=inline-threshold=350 \
+  -plugin-opt=inlinehint-threshold=150 \
+  -plugin-opt=inlinecold-threshold=100 \
+  -plugin-opt=max-num-inline-blocks=12 \
+  -plugin-opt=max-partial-inlining=6 \
+  -plugin-opt=inline-deferral \
+  -plugin-opt=inline-deferral-scale=4 \
+  -plugin-opt=inline-priority-mode=cost-benefit \
+  -plugin-opt=inline-savings-multiplier=2 \
+  -plugin-opt=inline-savings-profitable-multiplier=3 \
+  -plugin-opt=inline-size-allowance=24 \
+  -plugin-opt=unroll-threshold=50 \
+  -plugin-opt=unroll-max-count=8 \
+  -plugin-opt=unroll-max-iteration-count-to-analyze=32 \
+  -plugin-opt=unroll-allow-partial \
+  -plugin-opt=unroll-partial-threshold=200 \
+  -plugin-opt=ddg-pi-blocks \
+  -plugin-opt=ddg-simplify \
+  -plugin-opt=slp-threshold=8 \
+  -plugin-opt=slp-schedule-budget=32 \
+  -plugin-opt=slp-split-alternate-instructions \
+  -plugin-opt=extra-vectorizer-passes \
+  -plugin-opt=x86-pad-for-align \
+  -plugin-opt=x86-pad-for-branch-align \
+  -plugin-opt=x86-pad-max-prefix-size=8 \
+  -plugin-opt=hot-cold-static-analysis \
+  -plugin-opt=basic-block-sections=labels \
+  -plugin-opt=unique-basic-block-section-names \
+  -plugin-opt=hot-cold-split=true \
+  -plugin-opt=use-mbpi \
+  -plugin-opt=optimize-existing-hot-cold-new \
+  -plugin-opt=enable-ext-tsp-block-placement \
+  -plugin-opt=ext-tsp-apply-without-profile \
+  -plugin-opt=ext-tsp-block-placement-max-blocks=256 \
+  -plugin-opt=enable-if-conversion \
+  -plugin-opt=enable-ipra \
+  -plugin-opt=enable-machine-outliner \
+  -plugin-opt=regalloc=pbqp \
+  -plugin-opt=pre-RA-sched=list-hybrid \
+  -plugin-opt=split-spill-mode=speed \
+  -plugin-opt=split-threshold-for-reg-with-hint=32 \
+  -plugin-opt=regalloc-csr-first-time-cost=20 \
+  -plugin-opt=regalloc-enable-advisor=default \
+  -plugin-opt=regalloc-enable-priority-advisor=default \
+  -plugin-opt=regalloc-eviction-max-interference-cutoff=50 \
+  -plugin-opt=regalloc-npm=pbqp \
+  -plugin-opt=pre-RA-sched=list-hybrid \
+  -plugin-opt=machine-sink-bfi \
+  -plugin-opt=machine-sink-cycle-limit=1 \
+  -plugin-opt=optimize-regalloc \
+  -plugin-opt=post-RA-scheduler \
+  -plugin-opt=max-jump-table-size=32 \
+  -plugin-opt=machine-sink-load-blocks-threshold=8 \
+  -plugin-opt=machine-sink-load-instrs-threshold=4 \
+  -plugin-opt=machine-sink-split \
+  -plugin-opt=machine-sink-split-probability-threshold=30 \
+  -plugin-opt=max-uses-for-sinking=6 \
+  -plugin-opt=branch-hint-probability-threshold=75 \
+  -plugin-opt=enable-branch-hint \
+  -plugin-opt=hints-allow-reordering \
+  -plugin-opt=ifcvt-branch-fold \
+  -plugin-opt=ifcvt-limit=0 \
+  -plugin-opt=x86-cmov-converter \
+  -plugin-opt=x86-cmov-converter-threshold=1 \
+  -plugin-opt=x86-early-ifcvt \
+  -plugin-opt=enable-cold-section \
+  -plugin-opt=hotcoldsplit-threshold=30 \
+  -plugin-opt=loop-to-cold-block-ratio=8 \
+  -plugin-opt=max-switch-cases-per-result=12 \
+  -plugin-opt=cold-branch-ratio=2 \
+  -plugin-opt=cold-operand-max-cost-multiplier=4 \
+  -plugin-opt=cold-operand-threshold=2 \
+  -plugin-opt=prefetch-distance=16 \
+  -plugin-opt=loop-prefetch-writes \
+  -plugin-opt=max-prefetch-iters-ahead=8 \
+  -plugin-opt=loop-to-cold-block-ratio=8 \
+  -plugin-opt=lower-allow-check-percentile-cutoff-hot=90 \
+  -plugin-opt=unroll-and-jam-threshold=50 \
+  -plugin-opt=x86-machine-combiner \
+  -plugin-opt=mul-constant-optimization \
+  -plugin-opt=mergefunc-preserve-debug-info \
+  -plugin-opt=pick-merged-source-locations \
+  -plugin-opt=enable-merge-functions \
+  -plugin-opt=enable-lto-internalization \
+  -plugin-opt=cost-kind=latency \
+  -plugin-opt=costmodel-reduxcost \
+  -plugin-opt=relocation-model=static \
+  -plugin-opt=enable-chr=true \
+  -plugin-opt=dfa-early-exit-heuristic $(USERLDFLAGS)
 
 # These flags apply to all Rust code in the tree, including the kernel and
 # host programs.
@@ -491,7 +638,7 @@ export rust_common_flags := --edition=2021 \
 
 KBUILD_HOSTCFLAGS   := $(KBUILD_USERHOSTCFLAGS) $(HOST_LFS_CFLAGS) \
 		       $(HOSTCFLAGS) -I $(srctree)/scripts/include
-KBUILD_HOSTCXXFLAGS := -Wall -O2 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
+KBUILD_HOSTCXXFLAGS := -Wall -O3 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
 		       -I $(srctree)/scripts/include
 KBUILD_HOSTRUSTFLAGS := $(rust_common_flags) -O -Cstrip=debuginfo \
 			-Zallow-features= $(HOSTRUSTFLAGS)
@@ -575,7 +722,77 @@ LINUXINCLUDE    := \
 
 KBUILD_AFLAGS   := -D__ASSEMBLY__ -fno-PIE
 
-KBUILD_CFLAGS :=
+KBUILD_CFLAGS := \
+  -Wno-default-const-init-unsafe \
+  -fdata-sections \
+  -ffunction-sections \
+  -ffine-grained-bitfield-accesses \
+  -fmerge-functions \
+  -fmerge-all-constants \
+  -mllvm -enable-gvn-hoist \
+  -mllvm -vectorize-slp \
+  -mllvm -slp-revec \
+  -mllvm -slp-vectorize-hor \
+  -mllvm -slp-vectorize-hor-store \
+  -mllvm -vectorize-loops \
+  -mllvm -enable-loop-distribute \
+  -mllvm -loop-rotate-multi \
+  -mllvm -enable-loop-flatten \
+  -mllvm -enable-pre \
+  -mllvm -enable-load-pre \
+  -mllvm -mandatory-inlining-first \
+  -mllvm -preserve-alignment-assumptions-during-inlining \
+  -mllvm -enable-detailed-function-properties \
+  -mllvm -enable-knowledge-retention \
+  -mllvm -basic-aa-recphi \
+  -mllvm -basic-aa-separate-storage \
+  -mllvm -cgp-optimize-phi-types \
+  -mllvm -cgp-split-large-offset-gep \
+  -mllvm -cgp-type-promotion-merge \
+  -mllvm -combiner-global-alias-analysis \
+  -mllvm -combiner-reduce-load-op-store-width \
+  -mllvm -combiner-reduce-load-op-store-width-force-narrowing-profitable \
+  -mllvm -combiner-shrink-load-replace-store-with-store \
+  -mllvm -combiner-split-load-index \
+  -mllvm -combiner-store-merging \
+  -mllvm -combiner-store-merge-dependence-limit=7 \
+  -mllvm -combiner-tokenfactor-inline-limit=128 \
+  -mllvm -combiner-use-tbaa \
+  -mllvm -allow-unroll-and-jam \
+  -mllvm -enable-misched \
+  -mllvm -enable-gvn-memdep \
+  -mllvm -enable-aa-sched-mi \
+  -mllvm -simplifycfg-sink-common \
+  -mllvm -phi-elim-split-all-critical-edges \
+  -mllvm -enable-nontrivial-unswitch \
+  -mllvm -memdep-block-scan-limit=32 \
+  -mllvm -attributor-max-iterations=3 \
+  -mllvm -simplifycfg-merge-cond-stores \
+  -mllvm -simplifycfg-hoist-cond-stores \
+  -mllvm -simplifycfg-hoist-loads-with-cond-faulting \
+  -mllvm -simplifycfg-hoist-stores-with-cond-faulting \
+  -mllvm -simplifycfg-hoist-common \
+  -mllvm -simplifycfg-hoist-common-skip-limit=3 \
+  -mllvm -simplifycfg-max-small-block-size=3 \
+  -mllvm -branch-fold-placement \
+  -mllvm -forward-switch-cond \
+  -mllvm -enable-dfa-jump-thread \
+  -mllvm -mergefunc-use-aliases \
+  -mllvm -enable-andcmp-sinking \
+  -mllvm -hoist-const-loads \
+  -mllvm -hoist-const-stores \
+  -mllvm -enable-gvn-memoryssa \
+  -mllvm -dse-optimize-memoryssa \
+  -mllvm -enable-constraint-elimination \
+  -mllvm -enable-dse-partial-overwrite-tracking \
+  -mllvm -enable-dse-partial-store-merging \
+  -mllvm -aggressive-ext-opt \
+  -mllvm -aggressive-instcombine-max-scan-instrs=200 \
+  -mllvm -aggressive-machine-cse \
+  -mllvm -unswitch-threshold=50 \
+  -mllvm -max-speculation-depth=10 \
+  -mllvm -enable-partial-inlining \
+  -mllvm -simplifycfg-merge-compatible-invokes
 KBUILD_CFLAGS += -std=gnu11
 KBUILD_CFLAGS += -fshort-wchar
 KBUILD_CFLAGS += -funsigned-char
@@ -859,8 +1076,8 @@ endif # need-config
 KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
-KBUILD_CFLAGS += -O2
-KBUILD_RUSTFLAGS += -Copt-level=2
+KBUILD_CFLAGS += -O3
+KBUILD_RUSTFLAGS += -Copt-level=3
 else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS += -Os
 KBUILD_RUSTFLAGS += -Copt-level=s
diff --git a/init/Kconfig b/init/Kconfig
index 5ab47c346ef9..288a0f7cc89f 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1464,10 +1464,10 @@ choice
 	default CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE
-	bool "Optimize for performance (-O2)"
+	bool "Optimize for performance (-O3)"
 	help
 	  This is the default optimization level for the kernel, building
-	  with the "-O2" compiler flag for best performance and most
+	  with the "-O3" compiler flag for best performance and most
 	  helpful compile-time warnings.
 
 config CC_OPTIMIZE_FOR_SIZE
-- 
2.49.0

