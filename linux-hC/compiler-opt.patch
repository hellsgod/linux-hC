diff --git a/Makefile b/Makefile
index 82bb9cdf73a32..ac3632bfa3796 100644
--- a/Makefile
+++ b/Makefile
@@ -464,9 +464,54 @@ KERNELDOC       = $(srctree)/scripts/kernel-doc.py
 export KERNELDOC
 
 KBUILD_USERHOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes \
-			 -O2 -fomit-frame-pointer -std=gnu11
+			 -O3 -fomit-frame-pointer -std=gnu11
 KBUILD_USERCFLAGS  := $(KBUILD_USERHOSTCFLAGS) $(USERCFLAGS)
-KBUILD_USERLDFLAGS := $(USERLDFLAGS)
+KBUILD_USERLDFLAGS := \
+  -lto-CGO3 -lto-O3 -Wl,-O3 \
+  -Wl,--gc-sections -Wl,--no-undefined -Wl,--as-needed \
+  -Wl,--icf=safe \
+  -Wl,--compress-debug-sections=zstd -Wl,--exclude-libs,ALL -Wl,--strip-debug \
+  -plugin-opt=thinlto-split-lto-unit \
+  -plugin-opt=partial-inliner \
+  -plugin-opt=mergefunc \
+  -plugin-opt=pick-merged-source-locations \
+  -plugin-opt=inline-threshold=420 \
+  -plugin-opt=inlinehint-threshold=170 \
+  -plugin-opt=inlinecold-threshold=110 \
+  -plugin-opt=inline-deferral -plugin-opt=inline-deferral-scale=4 \
+  -plugin-opt=inline-savings-multiplier=2 -plugin-opt=inline-savings-profitable-multiplier=3 \
+  -plugin-opt=inline-size-allowance=28 \
+  -plugin-opt=max-num-inline-blocks=14 \
+  -plugin-opt=max-partial-inlining=8 \
+  -plugin-opt=unroll-threshold=70 \
+  -plugin-opt=unroll-max-count=10 \
+  -plugin-opt=unroll-max-iteration-count-to-analyze=40 \
+  -plugin-opt=unroll-allow-partial \
+  -plugin-opt=unroll-partial-threshold=240 \
+  -plugin-opt=enable-unroll-and-jam \
+  -plugin-opt=unroll-and-jam-threshold=60 \
+  -plugin-opt=enable-interleaved-mem-accesses \
+  -plugin-opt=enable-masked-interleaved-mem-accesses \
+  -plugin-opt=enable-loop-versioning-licm \
+  -plugin-opt=enable-loop-flatten \
+  -plugin-opt=extra-vectorizer-passes \
+  -plugin-opt=enable-epilogue-vectorization \
+  -plugin-opt=enable-early-exit-vectorization \
+  -plugin-opt=enable-dse-initializes-attr-improvement \
+  -plugin-opt=enable-tbaa \
+  -plugin-opt=globals-aa -plugin-opt=globalopt \
+  -plugin-opt=enable-memcpy-dag-opt \
+  -plugin-opt=enable-heap-to-stack-conversion \
+  -plugin-opt=enable-newgvn -plugin-opt=gvn-add-phi-translation \
+  -plugin-opt=enable-gvn-sink -plugin-opt=instcombine-code-sinking -plugin-opt=sink-insts-to-avoid-spills \
+  -plugin-opt=enable-post-misched -plugin-opt=misched-regpressure -plugin-opt=max-sched-reorder=80 \
+  -plugin-opt=post-RA-scheduler -plugin-opt=early-live-intervals -plugin-opt=optimize-regalloc \
+  -plugin-opt=regalloc=greedy -plugin-opt=regalloc-enable-advisor=default \
+  -plugin-opt=prefetch-distance=22 -plugin-opt=loop-prefetch-writes -plugin-opt=max-prefetch-iters-ahead=14 \
+  -plugin-opt=hot-cold-static-analysis \
+  -plugin-opt=hoist-common-insts \
+  -plugin-opt=enable-loop-simplifycfg-term-folding \
+  -plugin-opt=enable-split-backedge-in-load-pre $(USERLDFLAGS)
 
 # These flags apply to all Rust code in the tree, including the kernel and
 # host programs.
@@ -498,7 +543,7 @@ export rust_common_flags := --edition=2021 \
 
 KBUILD_HOSTCFLAGS   := $(KBUILD_USERHOSTCFLAGS) $(HOST_LFS_CFLAGS) \
 		       $(HOSTCFLAGS) -I $(srctree)/scripts/include
-KBUILD_HOSTCXXFLAGS := -Wall -O2 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
+KBUILD_HOSTCXXFLAGS := -Wall -O3 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
 		       -I $(srctree)/scripts/include
 KBUILD_HOSTRUSTFLAGS := $(rust_common_flags) -O -Cstrip=debuginfo \
 			-Zallow-features= $(HOSTRUSTFLAGS)
@@ -583,7 +628,32 @@ LINUXINCLUDE    := \
 
 KBUILD_AFLAGS   := -D__ASSEMBLY__ -fno-PIE
 
-KBUILD_CFLAGS :=
+KBUILD_CFLAGS := \
+  -fdata-sections -ffunction-sections \
+  -ffine-grained-bitfield-accesses \
+  -mllvm -enable-pre -mllvm -enable-load-pre \
+  -mllvm -enable-gvn-memdep -mllvm -enable-gvn-memoryssa \
+  -mllvm -dse-optimize-memoryssa \
+  -mllvm -enable-dse-partial-overwrite-tracking \
+  -mllvm -enable-dse-partial-store-merging \
+  -mllvm -enable-constraint-elimination \
+  -mllvm -basic-aa-recphi -mllvm -basic-aa-separate-storage \
+  -mllvm -aggressive-instcombine-max-scan-instrs=260 \
+  -mllvm -enable-partial-inlining \
+  -mllvm -enable-misched \
+  -mllvm -memdep-block-scan-limit=40 \
+  -mllvm -attributor-max-iterations=3 \
+  -mllvm -unswitch-threshold=64 -mllvm -enable-nontrivial-unswitch \
+  -mllvm -max-speculation-depth=12 \
+  -mllvm -simplifycfg-merge-cond-stores \
+  -mllvm -simplifycfg-hoist-common \
+  -mllvm -simplifycfg-hoist-cond-stores \
+  -mllvm -simplifycfg-hoist-loads-with-cond-faulting \
+  -mllvm -simplifycfg-hoist-stores-with-cond-faulting \
+  -mllvm -simplifycfg-sink-common \
+  -mllvm -branch-fold-placement -mllvm -forward-switch-cond \
+  -mllvm -enable-aa-sched-mi \
+  -mllvm -hoist-const-loads -mllvm -hoist-const-stores
 KBUILD_CFLAGS += -std=gnu11
 KBUILD_CFLAGS += -fshort-wchar
 KBUILD_CFLAGS += -funsigned-char
@@ -867,8 +937,8 @@ endif # need-config
 KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
-KBUILD_CFLAGS += -O2
-KBUILD_RUSTFLAGS += -Copt-level=2
+KBUILD_CFLAGS += -O3
+KBUILD_RUSTFLAGS += -Copt-level=3
 else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS += -Os
 KBUILD_RUSTFLAGS += -Copt-level=s
diff --git a/init/Kconfig b/init/Kconfig
index ecddb94db8dc0..486b516cfee24 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1524,10 +1524,10 @@ choice
 	default CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE
-	bool "Optimize for performance (-O2)"
+	bool "Optimize for performance (-O3)"
 	help
 	  This is the default optimization level for the kernel, building
-	  with the "-O2" compiler flag for best performance and most
+	  with the "-O3" compiler flag for best performance and most
 	  helpful compile-time warnings.
 
 config CC_OPTIMIZE_FOR_SIZE
