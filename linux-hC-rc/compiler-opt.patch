From 841d78d33dbe5a18a3f88d3544e39ca6637552a3 Mon Sep 17 00:00:00 2001
From: hellsgod <hellsgod@gmx.ch>
Date: Fri, 25 Apr 2025 15:56:39 +0200
Subject: [PATCH] Makefile: Rework my Optimizations

---
 Makefile     | 96 ++++++++++++++++++++++++++++++++++++++++++++++++----
 init/Kconfig |  4 +--
 2 files changed, 92 insertions(+), 8 deletions(-)

diff --git a/Makefile b/Makefile
index 907a4565f06ab..9b9aa055c873f 100644
--- a/Makefile
+++ b/Makefile
@@ -462,9 +462,52 @@ HOSTRUSTC = rustc
 HOSTPKG_CONFIG	= pkg-config
 
 KBUILD_USERHOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes \
-			 -O2 -fomit-frame-pointer -std=gnu11
+			 -O3 -fomit-frame-pointer -std=gnu11
 KBUILD_USERCFLAGS  := $(KBUILD_USERHOSTCFLAGS) $(USERCFLAGS)
-KBUILD_USERLDFLAGS := $(USERLDFLAGS)
+KBUILD_USERLDFLAGS := \
+  -lto-CGO3 -lto-O3 -Wl,-O3 \
+  -Wl,--gc-sections -Wl,--no-undefined -Wl,--as-needed \
+  -Wl,-z,now -Wl,--relro -Wl,--relax \
+  -Wl,--icf=safe -Wl,--emit-relocs \
+  -Wl,--compress-debug-sections=zstd \
+  -Wl,--exclude-libs,ALL -Wl,--strip-debug \
+  -plugin-opt=inline-threshold=350 \
+  -plugin-opt=inlinehint-threshold=150 \
+  -plugin-opt=inlinecold-threshold=100 \
+  -plugin-opt=unroll-threshold=50 \
+  -plugin-opt=unroll-max-count=8 \
+  -plugin-opt=unroll-max-iteration-count-to-analyze=32 \
+  -plugin-opt=unroll-allow-partial \
+  -plugin-opt=unroll-partial-threshold=200 \
+  -plugin-opt=slp-threshold=8 \
+  -plugin-opt=slp-vectorize-hor-store \
+  -plugin-opt=thinlto-assume-merged \
+  -plugin-opt=codegen-data-thinlto-two-rounds \
+  -plugin-opt=hoist-common-insts \
+  -plugin-opt=mergefunc-preserve-debug-info \
+  -plugin-opt=early-live-intervals \
+  -plugin-opt=enable-chr=true \
+  -plugin-opt=cost-kind=latency \
+  -plugin-opt=enable-lto-internalization \
+  -plugin-opt=adce-remove-loops \
+  -plugin-opt=dfa-early-exit-heuristic \
+  -plugin-opt=enable-epilogue-vectorization \
+  -plugin-opt=sink-insts-to-avoid-spills \
+  -plugin-opt=sink-freq-percent-threshold=50 \
+  -plugin-opt=enable-spill-copy-elim \
+  -plugin-opt=interleave-loops \
+  -plugin-opt=enable-load-in-loop-pre \
+  -plugin-opt=enable-loop-simplifycfg-term-folding \
+  -plugin-opt=enable-split-backedge-in-load-pre \
+  -plugin-opt=enable-interleaved-mem-accesses \
+  -plugin-opt=enable-masked-interleaved-mem-accesses \
+  -plugin-opt=instcombine-code-sinking \
+  -plugin-opt=enable-early-exit-vectorization \
+  -plugin-opt=enable-dse-initializes-attr-improvement \
+  -plugin-opt=enable-post-misched \
+  -plugin-opt=x86-pad-for-align \
+  -plugin-opt=prefetch-distance=16 \
+  -plugin-opt=unroll-and-jam-threshold=50 $(USERLDFLAGS)
 
 # These flags apply to all Rust code in the tree, including the kernel and
 # host programs.
@@ -491,7 +534,7 @@ export rust_common_flags := --edition=2021 \
 
 KBUILD_HOSTCFLAGS   := $(KBUILD_USERHOSTCFLAGS) $(HOST_LFS_CFLAGS) \
 		       $(HOSTCFLAGS) -I $(srctree)/scripts/include
-KBUILD_HOSTCXXFLAGS := -Wall -O2 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
+KBUILD_HOSTCXXFLAGS := -Wall -O3 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
 		       -I $(srctree)/scripts/include
 KBUILD_HOSTRUSTFLAGS := $(rust_common_flags) -O -Cstrip=debuginfo \
 			-Zallow-features= $(HOSTRUSTFLAGS)
@@ -575,7 +618,48 @@ LINUXINCLUDE    := \
 
 KBUILD_AFLAGS   := -D__ASSEMBLY__ -fno-PIE
 
-KBUILD_CFLAGS :=
+KBUILD_CFLAGS := \
+  -fdata-sections \
+  -ffunction-sections \
+  -mllvm -enable-gvn-hoist \
+  -mllvm -vectorize-slp \
+  -mllvm -vectorize-loops \
+  -mllvm -enable-loop-distribute \
+  -mllvm -enable-memcpy-dag-opt \
+  -mllvm -enable-pre \
+  -mllvm -enable-load-pre \
+  -mllvm -allow-unroll-and-jam \
+  -mllvm -enable-misched \
+  -mllvm -enable-gvn-memdep \
+  -mllvm -enable-loop-flatten \
+  -mllvm -enable-aa-sched-mi \
+  -mllvm -enable-merge-functions \
+  -mllvm -simplifycfg-sink-common \
+  -mllvm -enable-nontrivial-unswitch \
+  -mllvm -hot-cold-static-analysis \
+  -mllvm -memdep-block-scan-limit=32 \
+  -mllvm -attributor-max-iterations=3 \
+  -mllvm -simplifycfg-merge-cond-stores \
+  -mllvm -simplifycfg-hoist-common \
+  -mllvm -branch-fold-placement \
+  -mllvm -enable-dfa-jump-thread \
+  -mllvm -mergefunc-use-aliases \
+  -mllvm -enable-andcmp-sinking \
+  -mllvm -hoist-const-loads \
+  -mllvm -hoist-const-stores \
+  -mllvm -enable-gvn-memoryssa \
+  -mllvm -dse-optimize-memoryssa \
+  -mllvm -enable-constraint-elimination \
+  -mllvm -enable-dse-partial-overwrite-tracking \
+  -mllvm -enable-dse-partial-store-merging \
+  -mllvm -aggressive-ext-opt \
+  -mllvm -aggressive-instcombine-max-scan-instrs=200 \
+  -mllvm -aggressive-machine-cse \
+  -mllvm -unswitch-threshold=50 \
+  -mllvm -max-speculation-depth=10 \
+  -mllvm -enable-partial-inlining \
+  -mllvm -branch-hint-probability-threshold=75 \
+  -mllvm -simplifycfg-merge-compatible-invokes
 KBUILD_CFLAGS += -std=gnu11
 KBUILD_CFLAGS += -fshort-wchar
 KBUILD_CFLAGS += -funsigned-char
@@ -859,8 +943,8 @@ endif # need-config
 KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
-KBUILD_CFLAGS += -O2
-KBUILD_RUSTFLAGS += -Copt-level=2
+KBUILD_CFLAGS += -O3
+KBUILD_RUSTFLAGS += -Copt-level=3
 else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS += -Os
 KBUILD_RUSTFLAGS += -Copt-level=s
diff --git a/init/Kconfig b/init/Kconfig
index 5ab47c346ef93..288a0f7cc89ff 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1464,10 +1464,10 @@ choice
 	default CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE
-	bool "Optimize for performance (-O2)"
+	bool "Optimize for performance (-O3)"
 	help
 	  This is the default optimization level for the kernel, building
-	  with the "-O2" compiler flag for best performance and most
+	  with the "-O3" compiler flag for best performance and most
 	  helpful compile-time warnings.
 
 config CC_OPTIMIZE_FOR_SIZE
-- 
2.49.0

