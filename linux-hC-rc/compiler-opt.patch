From 60100c6f4fef44950ecb1c1f2e54d809c9c2d84a Mon Sep 17 00:00:00 2001
From: hellsgod <hellsgod@gmx.ch>
Date: Mon, 3 Feb 2025 19:40:31 +0100
Subject: [PATCH] Makefile: Compiler-opt V2

---
 Makefile     | 12 ++++++------
 init/Kconfig |  4 ++--
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/Makefile b/Makefile
index 9e0d63d9d94b..ad0e1364592b 100644
--- a/Makefile
+++ b/Makefile
@@ -462,9 +462,9 @@ HOSTRUSTC = rustc
 HOSTPKG_CONFIG	= pkg-config
 
 KBUILD_USERHOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes \
-			 -O2 -fomit-frame-pointer -std=gnu11
+			 -O3 -fomit-frame-pointer -std=gnu11
 KBUILD_USERCFLAGS  := $(KBUILD_USERHOSTCFLAGS) $(USERCFLAGS)
-KBUILD_USERLDFLAGS := $(USERLDFLAGS)
+KBUILD_USERLDFLAGS := -lto-CGO3 -lto-O3 -Wl,-O3 -Wl,--gc-sections -Wl,--no-undefined -Wl,--as-needed -Wl,-z,common -Wl,--icf=safe -Wl,-z,now -Wl,--relax -Wl,--relro -Wl,--emit-relocs -Wl,--compress-debug-sections=zstd -Wl,--exclude-libs,ALL -Wl,--strip-debug $(USERLDFLAGS)
 
 # These flags apply to all Rust code in the tree, including the kernel and
 # host programs.
@@ -491,7 +491,7 @@ export rust_common_flags := --edition=2021 \
 
 KBUILD_HOSTCFLAGS   := $(KBUILD_USERHOSTCFLAGS) $(HOST_LFS_CFLAGS) \
 		       $(HOSTCFLAGS) -I $(srctree)/scripts/include
-KBUILD_HOSTCXXFLAGS := -Wall -O2 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
+KBUILD_HOSTCXXFLAGS := -Wall -O3 $(HOST_LFS_CFLAGS) $(HOSTCXXFLAGS) \
 		       -I $(srctree)/scripts/include
 KBUILD_HOSTRUSTFLAGS := $(rust_common_flags) -O -Cstrip=debuginfo \
 			-Zallow-features= $(HOSTRUSTFLAGS)
@@ -553,7 +553,7 @@ LDFLAGS_MODULE  =
 CFLAGS_KERNEL	=
 RUSTFLAGS_KERNEL =
 AFLAGS_KERNEL	=
-LDFLAGS_vmlinux =
+LDFLAGS_vmlinux = -lto-CGO3 -lto-O3 -Wl,-O3 -Wl,--gc-sections -Wl,--no-undefined -Wl,--as-needed -Wl,-z,common -Wl,--icf=safe -Wl,-z,now -Wl,--relax -Wl,--relro -Wl,--emit-relocs -Wl,--compress-debug-sections=zstd -Wl,--exclude-libs,ALL -Wl,--strip-debug
 
 # Use USERINCLUDE when you must reference the UAPI directories only.
 USERINCLUDE    := \
@@ -575,7 +575,7 @@ LINUXINCLUDE    := \
 
 KBUILD_AFLAGS   := -D__ASSEMBLY__ -fno-PIE
 
-KBUILD_CFLAGS :=
+KBUILD_CFLAGS := -mllvm -enable-gvn-hoist -mllvm -inline-threshold=1000 -mllvm -unroll-threshold=50 -mllvm -vectorize-slp -mllvm -vectorize-loops -mllvm -enable-loop-distribute -fdata-sections -ffunction-sections -mllvm -enable-memcpy-dag-opt -mllvm -enable-pre -mllvm -enable-load-pre -mllvm -allow-unroll-and-jam -mllvm -enable-misched -mllvm -enable-gvn-memdep -mllvm -enable-loop-flatten -mllvm -slp-vectorize-hor-store -mllvm -enable-aa-sched-mi -mllvm -enable-merge-functions -mllvm -simplifycfg-sink-common -mllvm -unswitch-threshold=50 -mllvm -enable-nontrivial-unswitch -mllvm -hot-cold-static-analysis -mllvm -max-speculation-depth=10 -mllvm -enable-partial-inlining -mllvm -inlinehint-threshold=150 -mllvm -inlinecold-threshold=200 -mllvm -memdep-block-scan-limit=32 -mllvm -attributor-max-iterations=3 -mllvm -thinlto-assume-merged -mllvm -simplifycfg-merge-cond-stores -mllvm -branch-hint-probability-threshold=75 -mllvm -x86-pad-for-align -mllvm -slp-threshold=8 -mllvm -slp-vectorize-hor -mllvm -simplifycfg-hoist-common -mllvm -unroll-max-count=8 -mllvm -mergefunc-preserve-debug-info -mllvm -adce-remove-loops -mllvm -mergefunc-use-aliases -mllvm -interleave-loops -mllvm -enable-interleaved-mem-accesses -mllvm -enable-masked-interleaved-mem-accesses -mllvm -prefetch-distance=16 -mllvm -enable-load-in-loop-pre -mllvm -enable-loop-simplifycfg-term-folding -mllvm -enable-split-backedge-in-load-pre -mllvm -instcombine-code-sinking -mllvm -lto-embed-bitcode=optimized -mllvm -cost-kind=latency -mllvm -enable-lto-internalization -mllvm -hoist-common-insts -mllvm -simplifycfg-merge-compatible-invokes -mllvm -branch-fold-placement -mllvm -unroll-and-jam-threshold=50 -mllvm -enable-chr -mllvm -early-live-intervals -mllvm -enable-andcmp-sinking -mllvm -hoist-const-loads -mllvm -hoist-const-stores -mllvm -enable-post-misched -mllvm -enable-early-exit-vectorization -mllvm -enable-dse-initializes-attr-improvement -mllvm -enable-gvn-memoryssa -mllvm -dse-optimize-memoryssa -mllvm -dfa-early-exit-heuristic -mllvm -codegen-data-thinlto-two-rounds
 KBUILD_CFLAGS += -std=gnu11
 KBUILD_CFLAGS += -fshort-wchar
 KBUILD_CFLAGS += -funsigned-char
@@ -859,7 +859,7 @@ endif # need-config
 KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
-KBUILD_CFLAGS += -O2
+KBUILD_CFLAGS += -O3
 KBUILD_RUSTFLAGS += -Copt-level=2
 else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS += -Os
diff --git a/init/Kconfig b/init/Kconfig
index d0d021b3fa3b..daf0b0be124a 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1459,10 +1459,10 @@ choice
 	default CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE
-	bool "Optimize for performance (-O2)"
+	bool "Optimize for performance (-O3)"
 	help
 	  This is the default optimization level for the kernel, building
-	  with the "-O2" compiler flag for best performance and most
+	  with the "-O3" compiler flag for best performance and most
 	  helpful compile-time warnings.
 
 config CC_OPTIMIZE_FOR_SIZE
-- 
2.48.1
